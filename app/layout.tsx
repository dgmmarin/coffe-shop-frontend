"use client"
import './globals.css'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import Footer from './components/footer'
import Navbar2 from './components/navbar2'
import Sidebar from './components/sidebar'
import { useAuth } from '@/hooks/use-auth'
import { AuthContext } from '@/hooks/auth-context'
import RequireAuth from '@/hooks/require-auth'
import { useRouter } from 'next/navigation';
import { useEffect } from 'react'
import Login from './components/login'


const inter = Inter({ subsets: ['latin'] })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }
export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const { login, logout, setUser, getUser } = useAuth();
  const router = useRouter()
  // Here is what you were missing
  let user ;
  useEffect(() => {
    user = getUser()
    console.log("user", user)
    if (!user) {
      router.push('/users');
    }
  }, []);

  if (user) {
    return (
      <html lang="en">
        <body className={inter.className}>
          <Navbar2></Navbar2>
          <div className='h-full overflow-hidden bg-white pt-16'>
            <AuthContext.Provider value={{ user, setUser }}>
              <Login></Login>
            </AuthContext.Provider>
          </div>
        </body>
      </html>
    )
  } else {
    return (
      <html lang="en">
        <body className={inter.className}>
          <Navbar2></Navbar2>
          <div className='h-full overflow-hidden bg-white pt-16'>
            <AuthContext.Provider value={{ user, setUser }}>
              <Sidebar></Sidebar>
              <div className="bg-gray-900 opacity-50 hidden fixed inset-0 z-10" id="sidebarBackdrop"></div>
              <div id="main-content" className="flex flex-col h-full bg-white overflow-y-auto lg:ml-64">
                <main>
                  <div className="pt-6 px-4">
                    {/* <RequireAuth> */}
                      {children}
                    {/* </RequireAuth> */}
                  </div>
                </main>
                <Footer></Footer>
              </div>
            </AuthContext.Provider>
          </div>
        </body>
      </html>
    )
  }
}
